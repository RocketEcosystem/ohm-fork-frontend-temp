/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UniswapV3PoolCreator,
  UniswapV3PoolCreatorInterface,
} from "../UniswapV3PoolCreator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "IDENTICAL_ADDRESSES",
    type: "error",
  },
  {
    inputs: [],
    name: "INSUFFICIENT_AMOUNT",
    type: "error",
  },
  {
    inputs: [],
    name: "INVALID_FEE",
    type: "error",
  },
  {
    inputs: [],
    name: "POOL_EXISTS",
    type: "error",
  },
  {
    inputs: [],
    name: "POOL_INITIALIZATION_FAILED",
    type: "error",
  },
  {
    inputs: [],
    name: "ZERO_ADDRESS",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
    ],
    name: "PoolCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "PoolInitialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    name: "createAndInitializePool",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a034608957601f6108a538819003918201601f19168301916001600160401b03831184841017608e57808492602094604052833981010312608957516001600160a01b038116908190036089576001600055801560785760805260405161080090816100a58239608051818181604c01526101270152f35b63538ba4f960e01b60005260046000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c9081636306b1971461007e575063c45a01551461003757600080fd5b3461007b578060031936011261007b576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b80fd5b9050346105905760a0366003190112610590576004356001600160a01b03811691908281036103be576024356001600160a01b0381169390919084830361058c576044359162ffffff83169586840361058857606435926084359660028a5414610546575060028955818114610537578015801561052f575b610520576101f488141580610514575b80610508575b6104f95710156104f3575b604051630b4c774160e11b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316919060208180610164888a87600485016105f1565b0381865afa9081156104e85789916104c9575b506001600160a01b03166104ba57821515806104b1575b1561045a576040516323b872dd60e01b81526001600160a01b0382169490602081806101bf8830336004850161062f565b03818d8a5af1801561044f57610432575b506040516323b872dd60e01b8152956001600160a01b03811693908a602089806101ff8d30336004850161062f565b0381848a5af194851561042557610236996020966103fa575b5060405163a167129560e01b8152998a9586948593600485016105f1565b03925af19283156103ef576020967f4204e7aa64f9db6fe47ab01343f63e57d93a362a091a0e61c35d3c5f5158bd1b61028d95610293978b916103c2575b506040519283526001600160a01b0316988992a4610651565b91610651565b90600f0b9081156103be5760401b60170b0560016001607f1b0319811215806103ad575b15610395578281600f0b12610395576001600160801b03906102de9060401b60170b610688565b16600f0b8281126103955760401d60601b60ff60601b811690600160601b600160a01b0316810361039957813b156103955760405163f637731d60e01b815260048101829052838160248183875af19081610381575b50610348576343262cb960e01b8352600483fd5b602092827f30440fb2e4ce813a3feb1a945fc1c8190ba344a38f64cb33348155d72ab138b285600194604051908152a255604051908152f35b8461038e91959295610594565b9238610334565b8280fd5b634e487b7160e01b83526011600452602483fd5b5060016001607f1b038113156102b7565b8380fd5b6103e291508a3d8c116103e8575b6103da8183610594565b8101906105cd565b38610274565b503d6103d0565b6040513d89823e3d90fd5b61041990873d891161041e575b6104118183610594565b810190610617565b610218565b503d610407565b50604051903d90823e3d90fd5b61044a9060203d60201161041e576104118183610594565b6101d0565b6040513d8c823e3d90fd5b60405162461bcd60e51b815260206004820152602960248201527f556e69737761705633506f6f6c43726561746f723a20494e5355464649434945604482015268139517d05353d5539560ba1b6064820152608490fd5b5085151561018e565b6335cca73560e01b8852600488fd5b6104e2915060203d6020116103e8576103da8183610594565b38610177565b6040513d8b823e3d90fd5b92610118565b632fb15b8760e01b8952600489fd5b5061271088141561010d565b50610bb8881415610107565b63538ba4f960e01b8952600489fd5b5081156100f7565b63416fe95160e11b8952600489fd5b62461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b8780fd5b8580fd5b5080fd5b601f909101601f19168101906001600160401b038211908210176105b757604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126105ec57516001600160a01b03811681036105ec5790565b600080fd5b6001600160a01b0391821681529116602082015262ffffff909116604082015260600190565b908160209103126105ec575180151581036105ec5790565b6001600160a01b03918216815291166020820152604081019190915260600190565b60016001603f1b0381116105ec5760401b600f0b90565b8115610672570490565b634e487b7160e01b600052601260045260246000fd5b806106935750600090565b806001600160801b8210156107b9575b61075591600490600160401b8110156107ac575b600160201b81101561079f575b62010000811015610792575b610100811015610786575b601081101561077a575b1015610772575b6106f68184610668565b0160011c6107048184610668565b0160011c6107128184610668565b0160011c6107208184610668565b0160011c61072e8184610668565b0160011c61073c8184610668565b0160011c61074a8184610668565b0160011c8092610668565b8082101561076b57505b6001600160801b031690565b905061075f565b60011b6106ec565b811c9160021b916106e5565b60081c91811b916106db565b60101c9160081b916106d0565b60201c9160101b916106c4565b60401c9160201b916106b7565b5050608081901c600160401b6106a356fea264697066735822122084b2ddbaa56d23877d1eb7949ca0bd671ce5398b99f7423bbac79d15f01463bd64736f6c634300081b0033";

export class UniswapV3PoolCreator__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _factory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapV3PoolCreator> {
    return super.deploy(
      _factory,
      overrides || {}
    ) as Promise<UniswapV3PoolCreator>;
  }
  getDeployTransaction(
    _factory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_factory, overrides || {});
  }
  attach(address: string): UniswapV3PoolCreator {
    return super.attach(address) as UniswapV3PoolCreator;
  }
  connect(signer: Signer): UniswapV3PoolCreator__factory {
    return super.connect(signer) as UniswapV3PoolCreator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3PoolCreatorInterface {
    return new utils.Interface(_abi) as UniswapV3PoolCreatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3PoolCreator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UniswapV3PoolCreator;
  }
}
