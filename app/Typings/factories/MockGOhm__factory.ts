/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockGOhm, MockGOhmInterface } from "../MockGOhm";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initIndex",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "balanceFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "balanceTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staking",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sOhm",
        type: "address",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101008060405234610448576020816111848038038091610020828561044d565b83398101031261044857516040519061003a60408361044d565b600e82526d476f7665726e616e6365204f484d60901b60208301526040519061006460408361044d565b6004825263674f484d60e01b602083015282516001600160401b03811161036f57610090600054610470565b601f81116103f6575b506020601f82116001146103905781929394600092610385575b50508160011b916000199060031b1c1916176000555b81516001600160401b03811161036f576100e4600154610470565b601f811161030a575b50602092601f82116001146102a5579281929360009261029a575b50508160011b916000199060031b1c1916176001555b60126080524660a052604051600090600054918161013b84610470565b91828252602082019460018116908160001461027e5750600114610232575b6101669250038261044d565b51902060405160208101917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f835260408201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260a081526101da60c08261044d565b51902060c05260e052604051610cb990816104ab82396080518181816103eb015281816105f101526106f5015260a05181610a7f015260c05181610aa6015260e0518181816103bf0152818161061f015261075a0152f35b50600080805290916000805160206111648339815191525b8183106102625750509060206101669282010161015a565b602091935080600191548385880101520191019091839261024a565b60ff191686525061016692151560051b8201602001905061015a565b015190503880610108565b601f198216936001600052806000209160005b8681106102f257508360019596106102d9575b505050811b0160015561011e565b015160001960f88460031b161c191690553880806102cb565b919260206001819286850151815501940192016102b8565b60016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f830160051c81019160208410610365575b601f0160051c01905b81811061035957506100ed565b6000815560010161034c565b9091508190610343565b634e487b7160e01b600052604160045260246000fd5b0151905038806100b3565b601f1982169060008052806000209160005b8181106103de575095836001959697106103c5575b505050811b016000556100c9565b015160001960f88460031b161c191690553880806103b7565b9192602060018192868b0151815501940192016103a2565b60008052600080516020611164833981519152601f830160051c8101916020841061043e575b601f0160051c01905b8181106104325750610099565b60008155600101610425565b909150819061041c565b600080fd5b601f909101601f19168101906001600160401b0382119082101761036f57604052565b90600182811c921680156104a0575b602083101461048a57565b634e487b7160e01b600052602260045260246000fd5b91607f169161047f56fe6080604052600436101561001257600080fd5b60003560e01c806306fdde03146108fd578063095ea7b3146108955780631068361f1461087157806318160ddd1461085357806323b872dd1461077d5780632986c0e51461074257806330adf81f14610719578063313ce567146106db5780633644e515146106c057806340c10f191461064457806366a5236c146105d357806370a08231146105995780637ecebe001461055f57806395d89b411461047f5780639dc29fac1461041d578063a8248768146103a4578063a9059cbb1461032a578063d505accf146101435763dd62ed3e146100ed57600080fd5b3461013e57604036600319011261013e57610106610a41565b61010e610a57565b6001600160a01b039182166000908152600460209081526040808320949093168252928352819020549051908152f35b600080fd5b3461013e5760e036600319011261013e5761015c610a41565b610164610a57565b6044356064359260843560ff811680910361013e574285106102eb576080600091602093610190610a7a565b9060018060a01b03169687855260058652604085209889549960018b0190556040519087820192600080516020610c4483398151915284528a604084015260018060a01b03169a8b6060840152898784015260a083015260c082015260c081526101fb60e0826109bf565b519020604051908682019261190160f01b845260228301526042820152604281526102276062826109bf565b519020906040519182528482015260a435604082015260c435606082015282805260015afa156102df576000516001600160a01b0316801515806102d6575b156102a057600080516020610c648339815191529160209160005260048252604060002085600052825280604060002055604051908152a3005b60405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606490fd5b50828114610266565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152601760248201527614115493525517d11150511312539157d1561412549151604a1b6044820152606490fd5b3461013e57604036600319011261013e57610343610a41565b602435903360005260036020526040600020610360838254610a6d565b905560018060a01b0316908160005260036020526040600020818154019055604051908152600080516020610c2483398151915260203392a3602060405160018152f35b3461013e57602036600319011261013e5760206104156103e67f0000000000000000000000000000000000000000000000000000000000000000600435610bf0565b61040f7f0000000000000000000000000000000000000000000000000000000000000000610bdf565b90610c03565b604051908152f35b3461013e57604036600319011261013e576000610438610a41565b600080516020610c2483398151915260206024359260018060a01b031692838552600382526040852061046c828254610a6d565b90558060025403600255604051908152a3005b3461013e57600036600319011261013e57604051600154600090816104a382610985565b808552916001811690811561053857506001146104db575b6104d7846104cb818603826109bf565b604051918291826109f8565b0390f35b600181527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6939250905b80821061051e575090915081016020016104cb826104bb565b919260018160209254838588010152019101909291610505565b60ff191660208087019190915292151560051b850190920192506104cb91508390506104bb565b3461013e57602036600319011261013e576001600160a01b03610580610a41565b1660005260056020526020604060002054604051908152f35b3461013e57602036600319011261013e576001600160a01b036105ba610a41565b1660005260036020526020604060002054604051908152f35b3461013e57602036600319011261013e57602061041561061d6106157f0000000000000000000000000000000000000000000000000000000000000000610bdf565b600435610bf0565b7f000000000000000000000000000000000000000000000000000000000000000090610c03565b3461013e57604036600319011261013e5761065d610a41565b60243590600254908282018092116106aa576020600080516020610c248339815191529160009360025560018060a01b0316938484526003825260408420818154019055604051908152a3005b634e487b7160e01b600052601160045260246000fd5b3461013e57600036600319011261013e576020610415610a7a565b3461013e57600036600319011261013e57602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461013e57600036600319011261013e576020604051600080516020610c448339815191528152f35b3461013e57600036600319011261013e5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461013e57606036600319011261013e57610796610a41565b61079e610a57565b6001600160a01b03909116600081815260046020908152604080832033845282529091205460443593600080516020610c248339815191529291856001820161082d575b5050836000526003825260406000206107fc868254610a6d565b90556001600160a01b03166000818152600383526040908190208054870190555194855293a3602060405160018152f35b61083691610a6d565b6000858152600484526040808220338352855290205585856107e2565b3461013e57600036600319011261013e576020600254604051908152f35b3461013e57604036600319011261013e5761088a610a41565b50610893610a57565b005b3461013e57604036600319011261013e576108ae610a41565b3360008181526004602090815260408083206001600160a01b0390951680845294825291829020602435908190559151918252600080516020610c6483398151915291a3602060405160018152f35b3461013e57600036600319011261013e57604051600080548161091f82610985565b80855291600181169081156105385750600114610946576104d7846104cb818603826109bf565b80805260208120939250905b80821061096b575090915081016020016104cb826104bb565b919260018160209254838588010152019101909291610952565b90600182811c921680156109b5575b602083101461099f57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610994565b601f909101601f19168101906001600160401b038211908210176109e257604052565b634e487b7160e01b600052604160045260246000fd5b91909160208152825180602083015260005b818110610a2b575060409293506000838284010152601f8019910116010190565b8060208092870101516040828601015201610a0a565b600435906001600160a01b038216820361013e57565b602435906001600160a01b038216820361013e57565b919082039182116106aa57565b6000467f000000000000000000000000000000000000000000000000000000000000000003610ac857507f000000000000000000000000000000000000000000000000000000000000000090565b6040518181815493610ad985610985565b928383526020830195600181169081600014610bc05750600114610b7f575b50610b05925003826109bf565b51902060405160208101917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f835260408201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260a08152610b7960c0826109bf565b51902090565b80809394925052602082205b818310610ba4575050906020610b059282010138610af8565b6020919350806001915483858801015201910190918392610b8b565b60ff1916875250610b0593151560051b83016020019150389050610af8565b60ff16604d81116106aa57600a0a90565b818102929181159184041417156106aa57565b8115610c0d570490565b634e487b7160e01b600052601260045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a26469706673582212206692eae956eb9a1454eca15838e20865d29221b8ecb057f9e15267793dd319cf64736f6c634300081b0033290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563";

export class MockGOhm__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _initIndex: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockGOhm> {
    return super.deploy(_initIndex, overrides || {}) as Promise<MockGOhm>;
  }
  getDeployTransaction(
    _initIndex: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_initIndex, overrides || {});
  }
  attach(address: string): MockGOhm {
    return super.attach(address) as MockGOhm;
  }
  connect(signer: Signer): MockGOhm__factory {
    return super.connect(signer) as MockGOhm__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockGOhmInterface {
    return new utils.Interface(_abi) as MockGOhmInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockGOhm {
    return new Contract(address, _abi, signerOrProvider) as MockGOhm;
  }
}
