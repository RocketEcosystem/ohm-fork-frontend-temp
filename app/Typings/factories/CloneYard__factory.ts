/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CloneYard, CloneYardInterface } from "../CloneYard";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_olympusAuthority",
        type: "address",
      },
      {
        internalType: "address",
        name: "_olympusERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sOlympusERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gOlympusERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "_staking",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingDistributor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bondDepository",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "bondDepository",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "olympusAuthority",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "olympusERC20",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sOlympusERC20",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "gOlympusERC20",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "staking",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "stakingDistributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
    ],
    name: "CloneFactoryDeployed",
    type: "event",
  },
  {
    inputs: [],
    name: "PAGE_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_olympusAuthority",
        type: "address",
      },
      {
        internalType: "address",
        name: "_olympusERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sOlympusERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gOlympusERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "_staking",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingDistributor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bondDepository",
        type: "address",
      },
    ],
    name: "adjustContracts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeWallet",
        type: "address",
      },
    ],
    name: "adjustFeeWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_deploymentFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_stakingFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rebaseFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bondingFee",
        type: "uint256",
      },
    ],
    name: "adjustFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "adjustOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bondDepository",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bondingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "clones",
    outputs: [
      {
        internalType: "address",
        name: "bondDepository",
        type: "address",
      },
      {
        internalType: "address",
        name: "olympusAuthority",
        type: "address",
      },
      {
        internalType: "address",
        name: "olympusERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "sOlympusERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "gOlympusERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "staking",
        type: "address",
      },
      {
        internalType: "address",
        name: "stakingDistributor",
        type: "address",
      },
      {
        internalType: "address",
        name: "treasury",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_epochLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_firstEpochNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_firstEpochTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    name: "deployAndInitializeClone",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bondDepository",
            type: "address",
          },
          {
            internalType: "address",
            name: "olympusAuthority",
            type: "address",
          },
          {
            internalType: "address",
            name: "olympusERC20",
            type: "address",
          },
          {
            internalType: "address",
            name: "sOlympusERC20",
            type: "address",
          },
          {
            internalType: "address",
            name: "gOlympusERC20",
            type: "address",
          },
          {
            internalType: "address",
            name: "staking",
            type: "address",
          },
          {
            internalType: "address",
            name: "stakingDistributor",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
        ],
        internalType: "struct CloneYard.Clone",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "deployerIndices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deploymentFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gOlympusERC20",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "page",
        type: "uint256",
      },
    ],
    name: "getClonesByPage",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bondDepository",
            type: "address",
          },
          {
            internalType: "address",
            name: "olympusAuthority",
            type: "address",
          },
          {
            internalType: "address",
            name: "olympusERC20",
            type: "address",
          },
          {
            internalType: "address",
            name: "sOlympusERC20",
            type: "address",
          },
          {
            internalType: "address",
            name: "gOlympusERC20",
            type: "address",
          },
          {
            internalType: "address",
            name: "staking",
            type: "address",
          },
          {
            internalType: "address",
            name: "stakingDistributor",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
        ],
        internalType: "struct CloneYard.Clone[]",
        name: "pageClones",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getInfoByIndex",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bondDepository",
            type: "address",
          },
          {
            internalType: "address",
            name: "olympusAuthority",
            type: "address",
          },
          {
            internalType: "address",
            name: "olympusERC20",
            type: "address",
          },
          {
            internalType: "address",
            name: "sOlympusERC20",
            type: "address",
          },
          {
            internalType: "address",
            name: "gOlympusERC20",
            type: "address",
          },
          {
            internalType: "address",
            name: "staking",
            type: "address",
          },
          {
            internalType: "address",
            name: "stakingDistributor",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
        ],
        internalType: "struct CloneYard.Clone",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getStakingInfoByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bounty",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getTokenInfoByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "olympusAuthority",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "olympusERC20",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebaseFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sOlympusERC20",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "staking",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingDistributor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

export class CloneYard__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _olympusAuthority: string,
    _olympusERC20: string,
    _sOlympusERC20: string,
    _gOlympusERC20: string,
    _staking: string,
    _stakingDistributor: string,
    _treasury: string,
    _bondDepository: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CloneYard> {
    return super.deploy(
      _olympusAuthority,
      _olympusERC20,
      _sOlympusERC20,
      _gOlympusERC20,
      _staking,
      _stakingDistributor,
      _treasury,
      _bondDepository,
      overrides || {}
    ) as Promise<CloneYard>;
  }
  getDeployTransaction(
    _olympusAuthority: string,
    _olympusERC20: string,
    _sOlympusERC20: string,
    _gOlympusERC20: string,
    _staking: string,
    _stakingDistributor: string,
    _treasury: string,
    _bondDepository: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _olympusAuthority,
      _olympusERC20,
      _sOlympusERC20,
      _gOlympusERC20,
      _staking,
      _stakingDistributor,
      _treasury,
      _bondDepository,
      overrides || {}
    );
  }
  attach(address: string): CloneYard {
    return super.attach(address) as CloneYard;
  }
  connect(signer: Signer): CloneYard__factory {
    return super.connect(signer) as CloneYard__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CloneYardInterface {
    return new utils.Interface(_abi) as CloneYardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CloneYard {
    return new Contract(address, _abi, signerOrProvider) as CloneYard;
  }
}
