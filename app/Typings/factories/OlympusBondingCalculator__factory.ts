/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OlympusBondingCalculator,
  OlympusBondingCalculatorInterface,
} from "../OlympusBondingCalculator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    name: "getKValue",
    outputs: [
      {
        internalType: "uint256",
        name: "k_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    name: "getTotalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_OHM",
        type: "address",
      },
    ],
    name: "initialize_OlympusBondingCalculator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    name: "markdown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "valuation",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60808060405234601557610dde908161001b8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816332da80a31461023f575080634249719f1461016b578063490084ef14610148578063686375491461011d57639c14558b1461005657600080fd5b346101185760203660031901126101185761006f6104a5565b60005460ff81166100e5576001600160a01b038216156100ac576001600160a81b03191660089190911b610100600160a81b031617600117600055005b60405162461bcd60e51b81526020600482015260116024820152705a65726f20616464726573733a204f484d60781b6044820152606490fd5b60405162461bcd60e51b815260206004820152600b60248201526a125b9a5d1a585b1a5e995960aa1b6044820152606490fd5b600080fd5b3461011857602036600319011261011857602061014061013b6104a5565b6107f3565b604051908152f35b346101185760203660031901126101185760206101406101666104a5565b6105de565b346101185760403660031901126101185760046101866104a5565b6020610191826107f3565b6040516318160ddd60e01b815293909284919082906001600160a01b03165afa918215610233576000926101fd575b6020670de0b6b3a76400006101f4846612725dd1d243ab6001600160e01b036101eb896024356109c2565b51160490610591565b04604051908152f35b91506020823d60201161022b575b81610218602093836104ec565b81010312610118579051906101f46101c0565b3d915061020b565b6040513d6000823e3d90fd5b34610118576020366003190112610118576102586104a5565b630240bc6b60e21b82526001600160a01b03811691606081600481865afa90811561023357600090600092610472575b50604051630dfe168160e01b815293600090602086600481845afa958615610467578296610446575b50815460081c6001600160a01b0390811696168603610388575050506001600160701b0316916004906020905b60405163313ce56760e01b815292839182905afa80156102335760ff91600091610359575b5016604d811161034357600a0a906001600160ff1b03821682036103435761033d6103376020946101409460011b90610591565b916107f3565b906105a4565b634e487b7160e01b600052601160045260246000fd5b61037b915060203d602011610381575b61037381836104ec565b810190610578565b84610303565b503d610369565b6004919293506020906040519283809263d21220a760e01b82525afa91821561043a5790859261040b575b506001600160a01b0316036103d7576001600160701b0316916004906020906102de565b60405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b2103830b4b960a11b6044820152606490fd5b61042d915060203d602011610433575b61042581836104ec565b810190610559565b856103b3565b503d61041b565b604051903d90823e3d90fd5b61046091965060203d6020116104335761042581836104ec565b94866102b1565b6040513d84823e3d90fd5b9050610496915060603d60601161049e575b61048e81836104ec565b810190610523565b509084610288565b503d610484565b600435906001600160a01b038216820361011857565b602081019081106001600160401b038211176104d657604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b038211908210176104d657604052565b51906001600160701b038216820361011857565b90816060910312610118576105378161050f565b9160406105466020840161050f565b92015163ffffffff811681036101185790565b9081602091031261011857516001600160a01b03811681036101185790565b90816020910312610118575160ff811681036101185790565b8181029291811591840414171561034357565b81156105ae570490565b634e487b7160e01b600052601260045260246000fd5b9190820180921161034357565b9190820391821161034357565b604051630dfe168160e01b81526001600160a01b039190911690602081600481855afa908115610233576004916020916000916107d6575b5060405163313ce56760e01b815292839182906001600160a01b03165afa908115610233576000916107b7575b5060405163d21220a760e01b815290602082600481865afa9182156102335760049260209160009161079a575b5060405163313ce56760e01b815293849182906001600160a01b03165afa80156102335760ff80916106ad9460009161077b575b501691166105c4565b60405163313ce56760e01b8152602081600481865afa80156102335760049260ff6106e59260609460009161075c575b5016906105d1565b9260405192838092630240bc6b60e21b82525afa908115610233576107229160009160009161073a575b506001600160701b039081169116610591565b604d82116103435761073791600a0a906105a4565b90565b9050610755915060603d60601161049e5761048e81836104ec565b503861070f565b610775915060203d6020116103815761037381836104ec565b386106dd565b610794915060203d6020116103815761037381836104ec565b386106a4565b6107b19150823d84116104335761042581836104ec565b38610670565b6107d0915060203d6020116103815761037381836104ec565b38610643565b6107ed9150823d84116104335761042581836104ec565b38610616565b6107fc906105de565b6000600382111561096857508061081a610814610d21565b82610d67565b60018101908181116103435781106108b657905b82821061084e5750505b8060011b90808204600214901517156103435790565b9091508161085a610d21565b90600091811561090d575061086f81846105a4565b9161088661087d8484610591565b838606906105c4565b84036108f9575061089790826105c4565b9081106108b6576108b0906108aa610d21565b90610d67565b9061082e565b60405162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b6044820152606490fd5b634e487b7160e01b81526001600452602490fd5b9050604051809262461bcd60e51b825260206004830152825192836024840152815b84811061095057505091604492838284010152601f80199101168101030190fd5b6020828201810151604488840101528694500161092f565b901561083857506001610838565b1561097d57565b60405162461bcd60e51b815260206004820152601e60248201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f7700006044820152606490fd5b906040516109cf816104bb565b600090528015610a45578115610a30576001600160901b038211610a27576109f99160701b6105a4565b610a0c6001600160e01b03821115610976565b60405190610a19826104bb565b6001600160e01b0316815290565b6109f991610a99565b5050604051610a3e816104bb565b6000815290565b60405162461bcd60e51b815260206004820152602660248201527f4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e206260448201526579207a65726f60d01b6064820152608490fd5b600090600019600160701b8209600160701b82810290831584830482141715610c805781610ac781856105d1565b9310610d0e575b82938615610cfa579086910991818311610ce2575b5090610aee916105d1565b928115610cd65780821015610c9457801960018101809111610c6c5781610b2491610b1e949316938480926105a4565b956105a4565b91801960018101809111610c805790610b3c916105a4565b9060018201809211610c6c57610b5c9291610b5691610591565b906105c4565b9082800460011483151715610c5857826002039060028211610c585750610b838184610591565b6002036002811161034357610b9791610591565b610ba18184610591565b6002036002811161034357610bb591610591565b610bbf8184610591565b6002036002811161034357610bd391610591565b610bdd8184610591565b6002036002811161034357610bf191610591565b610bfb8184610591565b6002036002811161034357610c0f91610591565b610c198184610591565b600203906002821161034357610c3991610c3291610591565b8093610591565b60020391600283116103435761073792610c5291610591565b90610591565b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b84526011600452602484fd5b634e487b7160e01b85526011600452602485fd5b60405162461bcd60e51b815260206004820152601a60248201527946756c6c4d6174683a2046554c4c4449565f4f564552464c4f5760301b6044820152606490fd5b915050610737916105a4565b9092506000198101908111610c6c5791610aee610ae3565b634e487b7160e01b86526012600452602486fd5b916000198101908111610c805791610ace565b60408051919082016001600160401b038111838210176104d657604052601a825279536166654d6174683a206469766973696f6e206279207a65726f60301b6020830152565b600181901c91506002808302908104830361034357610d8a9060018316906105c4565b03610d925790565b634e487b7160e01b600052600160045260246000fdfea2646970667358221220d8dc842f35088a2ba9bec117accc3104d851aa657f73ca90c4968142a335a18a64736f6c634300081b0033";

export class OlympusBondingCalculator__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OlympusBondingCalculator> {
    return super.deploy(overrides || {}) as Promise<OlympusBondingCalculator>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OlympusBondingCalculator {
    return super.attach(address) as OlympusBondingCalculator;
  }
  connect(signer: Signer): OlympusBondingCalculator__factory {
    return super.connect(signer) as OlympusBondingCalculator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OlympusBondingCalculatorInterface {
    return new utils.Interface(_abi) as OlympusBondingCalculatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OlympusBondingCalculator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OlympusBondingCalculator;
  }
}
